// SPDX-License-Identifier: UNLICENSED
// !! THIS FILE WAS AUTOGENERATED BY abi-to-sol v0.8.0. SEE SOURCE BELOW. !!
pragma solidity ^0.8.4;

interface IPudgyPenguins {
    function MAX_BY_MINT() external view returns (uint256);

    function MAX_ELEMENTS() external view returns (uint256);

    function PRICE() external view returns (uint256);

    function approve(address to, uint256 tokenId) external;

    function balanceOf(address owner) external view returns (uint256);

    function baseTokenURI() external view returns (string memory);

    function burn(uint256 tokenId) external;

    function creatorAddress() external view returns (address);

    function devAddress() external view returns (address);

    function getApproved(uint256 tokenId) external view returns (address);

    function isApprovedForAll(
        address owner,
        address operator
    ) external view returns (bool);

    function mint(address _to, uint256 _count) external payable;

    function name() external view returns (string memory);

    function owner() external view returns (address);

    function ownerOf(uint256 tokenId) external view returns (address);

    function pause(bool val) external;

    function paused() external view returns (bool);

    function price(uint256 _count) external pure returns (uint256);

    function renounceOwnership() external;

    function reveal_timestamp() external view returns (uint256);

    function safeTransferFrom(
        address from,
        address to,
        uint256 tokenId
    ) external;

    function safeTransferFrom(
        address from,
        address to,
        uint256 tokenId,
        bytes memory _data
    ) external;

    function setApprovalForAll(address operator, bool approved) external;

    function setBaseURI(string memory baseURI) external;

    function supportsInterface(bytes4 interfaceId) external view returns (bool);

    function symbol() external view returns (string memory);

    function tokenByIndex(uint256 index) external view returns (uint256);

    function tokenOfOwnerByIndex(
        address owner,
        uint256 index
    ) external view returns (uint256);

    function tokenURI(uint256 tokenId) external view returns (string memory);

    function totalMint() external view returns (uint256);

    function totalSupply() external view returns (uint256);

    function transferFrom(address from, address to, uint256 tokenId) external;

    function transferOwnership(address newOwner) external;

    function walletOfOwner(
        address _owner
    ) external view returns (uint256[] memory);

    function withdrawAll() external payable;
}
