// SPDX-License-Identifier: UNLICENSED
// !! THIS FILE WAS AUTOGENERATED BY abi-to-sol v0.8.0. SEE SOURCE BELOW. !!
pragma solidity ^0.8.4;

interface IStaking {
    event Harvest(address staker, uint256 amount);
    event OwnershipTransferred(
        address indexed previousOwner,
        address indexed newOwner
    );
    event Stake(address staker, uint256 amount);
    event StakingStart(uint256 startTime, uint256 endTime, uint256 tokens);
    event Unstake(address staker, uint256 amount);

    function Juice() external view returns (address);

    function JuiceStaked() external view returns (uint256);

    function harvest(uint256 stakeCount) external;

    function lastRewardUpdateTime() external view returns (uint256);

    function mapStakingInfo(
        address,
        uint256
    )
        external
        view
        returns (
            uint256 stakedAmount,
            uint256 startTime,
            uint256 endTime,
            uint256 stakingWeek,
            uint256 rewardDebt,
            uint256 unstakeStatus
        );

    function owner() external view returns (address);

    function pendingReward(
        address staker,
        uint256 stakeCount
    ) external view returns (uint256, uint256);

    function precisionFactor() external view returns (uint256);

    function renounceOwnership() external;

    function rescueReward(address receiver) external;

    function rewardPerSecond() external view returns (uint256);

    function rewardPerShare() external view returns (uint256);

    function stake(uint256 amount, uint256 stakeWeek) external;

    function stakingCount(address) external view returns (uint256);

    function stakingEndTime() external view returns (uint256);

    function stakingStartTime() external view returns (uint256);

    function startStaking(uint256 rewardTokens) external;

    function transferOwnership(address newOwner) external;

    function unstake(uint256 stakeCount) external;
}
